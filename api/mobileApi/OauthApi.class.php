<?phpclass OauthApi extends Api{    function loginVerify(){        $username = $_REQUEST['uid']?$_REQUEST['uid']:$this->verifyError();        $password = $_REQUEST['passwd']?$_REQUEST['passwd']:$this->verifyError();        $type = (int)$_REQUEST['type']?(int)$_REQUEST['type']:$this->verifyError();        //版本号        $ver = t($_REQUEST['ver'],true,ENT_QUOTES)?t($_REQUEST['ver'],true,ENT_QUOTES):'';        $result = service('Passport')->loginLocal($username, $password,0);        $lastError = service('Passport')->getLastError();        // 检查是否激活        if ($result !==true && $lastError == '用户未激活') {            $return['message'] = '该用户尚未激活，请更换帐号或网上激活帐号！';            $return['status'] = 0;            exit(json_encode($return));        }        if ($result === true) {            if (is_array($result) && $result['user'] == false) {                //判断是否为开放注册的用户                unset($map);                if(service('Passport')->isValidEmail($username)){                    $identifier_type = 'email';                }elseif(is_numeric($username) && is_int($username)){                    $identifier_type = 'id';                }else{                    $identifier_type = 'username';                }                $map[$identifier_type] = $username;                $user_info = M('user_info')->where($map)->find();                //如果存在开放注册的用户数据                if ($user_info) {                    //判断密码是否正确                    if(md5($password)!=$user_info['password']){                        $return['message'] = "认证失败";                        $return['status'] = 0;                    }elseif (intval($user_info['status'])==1){                        $return['message'] = "您的账号暂时处于未审核状态,请耐心等待管理员的审核。";                        $return['status'] = 0;                    }elseif (intval($user_info['status'])==3){                        $return['message'] = "您的帐号未通过审核,请重新注册或联系管理员";                        $return['status'] = 0;                    }else{                        $return['message'] = "您的账号异常，请联系管理员进行处理。";                        $return['status'] = 0;                    }                    exit(json_encode($return));                }else{                    unset($_SESSION['refer_url']);                    $return['message'] = $lastError;                    $return['status'] = 0;                }            }            //登录成功处理            if(service('Passport')->isValidEmail($username)){                $s = 'email';            }elseif(is_numeric($username)){                $s = 'uid';            }else{                $s = 'uname';            }            $user = M('user')->field('uid,uname')->where(array($s=>$username))->find();            $user || $this->verifyError();            //获取用户uc_uid            $uc_id = M('ucenter_user_link')->where('uid='.$user['uid'])->field('uc_uid')->find();            //获取信息            $data = service_call('Uuse004',array('uid'=>$uc_id['uc_uid']));            //登录类型            $count['type'] = $type;            //登录使用版本            $count['ver'] =  $ver;            //获取用户ip地址            $count['ip'] = get_client_ip();            //用户最登录时间            $count['time'] = time();            //uid            $count['uid']  = $user['uid'];            //判断是否已经存储,存储更新，没存添加            $mLogin = M('login');            $uid = $mLogin->where(array('uid'=>$user['uid']))->getField('uid');            if($uid){                //添加到统计表                M('mobile_login_count')->add($count);                //取出密钥                $login = $mLogin->where(array('uid'=>$uid))->field('oauth_token,oauth_token_secret')->find();            }else{                $login['uid']  = $user['uid'];                //添加统计                M('mobile_login_count')->add($count);                //生成密钥                $login['oauth_token']         = md5($user['uname'].'RJ-grid-mobile-2013');                $login['oauth_token_secret']  = md5(microtime().'RJ-grid-mobile-2013');                $login['uc_uid'] = $uc_id['uc_uid'];                //用户名                $login['uname'] = $user['uname'];                //用户角色                $login['role'] = $data[0]['identitytype'];                //用户学校id                $login['school_id'] = $data[0]['schoolid'];                //用户学校名字                $login['school_name'] = $data[0]['xxmc'];                //用户姓名                $login['sex'] =  $data[0]['xb']?$data[0]['xb']:0;//                $login['times'] =  1;                $mLogin->add($login);            }            $info = array();            $info['uid'] = $user['uid'];            $info['name'] = $user['uname'];            $info['uc_id'] = $uc_id['uc_uid'];            $info['role'] = $data[0]['identitytype'];            $info['schoolid'] = $data[0]['schoolid'];            $info['xb'] = $data[0]['xb'];            $info['oauth_token'] = $login['oauth_token'];            $info['oauth_token_secret'] = $login['oauth_token_secret'];            //学校名称            $info['xxmc'] = $data[0]['xxmc'];            if($data['identitytype']==3){                //院系名称                $info['yxmc'] = $data[0]['yxmc'];                //专业名称                $info['zymc'] = $data[0]['yxmc'];            }else{                $info['bmmc'] = $data[0]['bmmc'];            }        } else {            $return['message'] = $lastError;            $return['status'] = 0;        }        if($info){            return $info;        }else{            $message['message'] = '认证失败';            $message['code']    = '00001';            exit( json_encode( $message ) );        }    }    //登录后获取用户信息    private function userInfo($uid){    }    function access_token(){        if($_POST['userId'] && $_POST['passwd']){            $username = desdecrypt($_POST['userId'],'12345678');            if( is_numeric($username) ){                $map['uid'] = $username;            }elseif (is_string($username)){                $map['email'] = h($username);            }else{                return;            }            $map['password'] = md5(desdecrypt( h($_REQUEST['passwd']) ,'12345678' ) );            $user = M('user')->where($map)->field('uid')->find();            $this->mid = $user['uid'];        }    }    /**    +------------------------------------------------------------------------------     * DES加密某个字符串     * author：sunxiaobo     * date：2012-11-23    +------------------------------------------------------------------------------     */    function descode(){        if($_REQUEST['key'])            return desencrypt($_REQUEST['key'],$this->getRequestKey());    }    function request_key(){        return array($this->getRequestKey());    }    /**     * 获取所有应用列表     */    public function get_apps(){        return M('app')->findAll();    }    private function getRequestKey(){        return "thinksns";    }    function authorize(){        if($_POST['uid'] && $_POST['passwd']){            // 杨德升添加            $isIphone = $_REQUEST['isIphone']==='1';            $username = $isIphone ? $_POST['uid'] : desdecrypt( $_POST['uid'],$this->getRequestKey());            if( is_numeric($username) ){                $map['uid'] = $username;            }elseif (is_string($username)){                $map['email'] = $username;            }else{                $this->verifyError();            }            $map['password'] = $isIphone ? md5($_POST['passwd']) : md5( desdecrypt($_POST['passwd'],$this->getRequestKey()) );            $user = M('user')->where($map)->field('uid,uname')->find();            if($user){                if( $login = M('login')->where("uid=".$user['uid']." AND type='location'")->find() ){                    $data['oauth_token']         = $login['oauth_token'];                    $data['oauth_token_secret']  = $login['oauth_token_secret'];                    $data['uid']                 = $user['uid'];                    $data['name']  = $user['uname'];                    if(UC_SYNC){                        $uc_id = M('ucenter_user_link')->where('uid='.$user['uid'])->field('uc_uid')->find();                        $param = array();                        $param['uid'] = "{$uc_id['uc_uid']}";                        $userInfo = get_webService('Uuse004',$param);                        $data ['role'] = $userInfo[0]['identitytype'];                        $data ['identityid'] = $userInfo[0]['identityid'];                        $data ['schoolid'] = $userInfo[0]['schoolid'];                        $data['uc_id'] = $uc_id['uc_uid'];//                        if($data['role'] ==3){//                            $data['classid'] = $userInfo[0]['classid'];//                            $jb = get_webService('Usch021',array('classid'=>(string)$data['classid']));//                            $data['jbid'] = $jb[0]['id'];//                        }                    }                }else{                    $data['oauth_token']         = getOAuthToken($user['uid']);                    $data['oauth_token_secret']  = getOAuthTokenSecret();                    $data['uid']                 = $user['uid'];                    $savedata['type']            = 'location';                    $savedata = array_merge($savedata,$data);                    if(UC_SYNC){                        $uc_id = M('ucenter_user_link')->where('uid='.$user['uid'])->field('uc_uid')->find();                        $param = array();                        $param['uid'] = "{$uc_id['uc_uid']}";                        $userInfo = get_webService('Uuse004',$param);                        $data ['role'] = $userInfo[0]['identitytype'];                        $data ['identityid'] = $userInfo[0]['identityid'];                        $data ['schoolid'] = $userInfo[0]['schoolid'];                        $data['uc_id'] = $uc_id['uc_uid'];//                        if($data['role'] ==3){//                            $data['classid'] = $userInfo[0]['classid'];//                            $jb = get_webService('Usch021',array('classid'=>(string)$data['classid']));//                            $data['jbid'] = $jb[0]['id'];//                        }                    }                    M('login')->add($savedata);                }                return $data;            }else{                $this->verifyError();            }        }else{            $this->verifyError();        }    }}